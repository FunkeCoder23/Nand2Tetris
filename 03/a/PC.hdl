// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t] 
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // PC+1
    Inc16(in=PC, out=PC1);
    // PC=0
    And16(a=PC, b=false, out=zero);

    // if inc, choose PC+1 else PC
    Mux16(a=PC, b=PC1, sel=inc, out=IP);
    // if load, choose in, else PC/inc
    Mux16(a=IP, b=in, sel=load, out=LIP);
    // if reset, choose zero, else PC/inc/in
    Mux16(a=LIP, b=zero, sel=reset, out=nextPC);

    // if any flags, PC changes
    Or3(a=load,b=inc,c=reset,out=ld);

    // PC = next on any or PC
    Register(in=nextPC, load=ld, out=PC, out=out);

}
