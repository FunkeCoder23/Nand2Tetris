// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Selectors
    DMux8Way(in=true, sel=address[6..8], a=A, b=B, c=C, d=D, e=E, f=F, g=G, h=H);
    And(a=A, b=load, out=A1);
    And(a=B, b=load, out=B1);
    And(a=C, b=load, out=C1);
    And(a=D, b=load, out=D1);
    And(a=E, b=load, out=E1);
    And(a=F, b=load, out=F1);
    And(a=G, b=load, out=G1);
    And(a=H, b=load, out=H1);  
    // RAM banks
    RAM64(in=in, load=A1, address=address[0..5], out=a);
    RAM64(in=in, load=B1, address=address[0..5], out=b);
    RAM64(in=in, load=C1, address=address[0..5], out=c);
    RAM64(in=in, load=D1, address=address[0..5], out=d);
    RAM64(in=in, load=E1, address=address[0..5], out=e);
    RAM64(in=in, load=F1, address=address[0..5], out=f);
    RAM64(in=in, load=G1, address=address[0..5], out=g);
    RAM64(in=in, load=H1, address=address[0..5], out=h);

    //Mux Output
    Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[6..8], out=out);
}